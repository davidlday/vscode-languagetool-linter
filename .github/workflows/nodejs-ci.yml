name: Node.js CI

on: pull_request

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos-build:
    runs-on: macos-latest
    name: Build on MacOS
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: lts/*
          cache: "npm"
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Cache Homebrew
        id: cache-homebrew
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-homebrew
      - name: Set Test Environment Variables
        id: set-test-environment-variables
        run: |
          echo "LTLINTER_MANAGED_CLASSPATH=/usr/local/opt/languagetool/libexec/languagetool-server.jar" >> $GITHUB_ENV
          echo "LTLINTER_TEST_SERVICES=true" >> $GITHUB_ENV
          LTLINTER_IMAGE=$(cat ./package.json | jq -r '.contributes.configuration.properties."languageToolLinter.podman.imageName".default')
          echo "LTLINTER_IMAGE=$LTLINTER_IMAGE" >> $GITHUB_ENV
      - name: Install Podman and Languagetool
        id: install-brew
        run: |
          brew install podman languagetool
      - name: Initialize Podman Machine
        id: initialize-podman-machine
        run: podman machine init
      - name: Start Podman Machine
        id: start-podman-machine
        run: |
          sudo /usr/local/opt/podman/bin/podman-mac-helper install
          brew services restart podman
          podman machine start
      - name: Start LT Podman Services
        id: start-lt-podman-service
        run: |
          podman version
          podman pull $LTLINTER_IMAGE
          podman run -d -p 127.0.0.1:8082:8010 --name languagetool-test $LTLINTER_IMAGE
          podman run -d -p 127.0.0.1:8081:8010 --name languagetool-external $LTLINTER_IMAGE
          teststate=$(podman inspect languagetool-test|jq -r '.[0].State.Health.Status')
          echo "State: $teststate"
          while [ "$teststate" != "healthy" ]; do
            echo "State: $teststate"
            sleep 1
            teststate=$(podman inspect languagetool-test|jq -r '.[0].State.Health.Status')
          done;
          extstate=$(podman inspect languagetool-external|jq -r '.[0].State.Health.Status')
          echo "State: $extstate"
          while [ "$extstate" != "healthy" ]; do
            echo "State: $extstate"
            sleep 1
            extstate=$(podman inspect languagetool-external|jq -r '.[0].State.Health.Status')
          done;
      - name: Run Tests
        run: |
          podman ps -a
          npm run clean
          npm install -g typescript vsce json
          npm ci
          npm run vscode:prepublish
          npm test
      - name: ESLint
        run: npm run lint

  # windows-build:
  #   runs-on: windows-latest
  #   name: Build on Windows
  #   env:
  #     CI: true
  #   steps:
  #     - name: Set git to use LF
  #       run: |
  #         git config --global core.autocrlf false
  #         git config --global core.eol lf
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/*
  #     - uses: Vampire/setup-wsl@v1
  #     - name: Append scoop shims to path
  #       run: |
  #         echo "~\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #     - name: Install Podman via Scoop
  #       id: install-podman-via-scoop
  #       run: |
  #         Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
  #         iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
  #         scoop install podman
  #     # - name: Download Podman Installer
  #     #   id: download-podman
  #     #   run:
  #     #     Invoke-WebRequest
  #     #     https://github.com/containers/podman/releases/download/v4.2.1/podman-v4.2.1.msi
  #     #     -o "D:\a\vscode-languagetool-linter\podman-v4.2.1.msi"
  #     # - name: Install Podman
  #     #   id: install-podman
  #     #   run: |
  #     #     msiexec /a "D:\a\vscode-languagetool-linter\podman-v4.2.1.msi" /passive /log "D:\a\vscode-languagetool-linter\podman.log"
  #     #     type "D:\a\vscode-languagetool-linter\podman.log"
  #     - name: Initialize Podman Machine
  #       id: initialize-podman-machine
  #       run: |
  #         wsl -l -v
  #         podman machine init
  #     - name: Start Podman Machine
  #       id: start-podman-machine
  #       run: podman machine start
  #     - name: Install LanguageTool
  #       id: install-languagetool
  #       run: choco install languagetool
  #     - run: npm install -g typescript vsce json
  #     - run: npm ci
  #     - run: npm run vscode:prepublish
  #     - run: npm run test-compile
  #     - run: npm test
  #       name: Test
  #     - run: npm run lint
  #       name: ESLint
