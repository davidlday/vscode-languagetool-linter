{
  "annotation": [
    {
      "markup": "# ",
      "interpretAs": "",
      "offset": {
        "start": 0,
        "end": 2
      }
    },
    {
      "text": "Test Case: Backticks",
      "offset": {
        "start": 2,
        "end": 22
      }
    },
    {
      "markup": "\n\n## ",
      "interpretAs": "\n\n",
      "offset": {
        "start": 22,
        "end": 27
      }
    },
    {
      "text": "Inline Code",
      "offset": {
        "start": 27,
        "end": 38
      }
    },
    {
      "markup": "\n\n",
      "interpretAs": "\n\n",
      "offset": {
        "start": 38,
        "end": 40
      }
    },
    {
      "text": "Inline code ",
      "offset": {
        "start": 40,
        "end": 52
      }
    },
    {
      "markup": "`should be`",
      "interpretAs": "`#########`",
      "offset": {
        "start": 52,
        "end": 63
      }
    },
    {
      "text": " interpreted ",
      "offset": {
        "start": 63,
        "end": 76
      }
    },
    {
      "markup": "`as text`",
      "interpretAs": "`#######`",
      "offset": {
        "start": 76,
        "end": 85
      }
    },
    {
      "text": ".",
      "offset": {
        "start": 85,
        "end": 86
      }
    },
    {
      "markup": "\n\n",
      "interpretAs": "\n\n",
      "offset": {
        "start": 86,
        "end": 88
      }
    },
    {
      "text": "Testing ",
      "offset": {
        "start": 88,
        "end": 96
      }
    },
    {
      "markup": "``double ticks``",
      "interpretAs": "`##############`",
      "offset": {
        "start": 96,
        "end": 112
      }
    },
    {
      "text": " inline.",
      "offset": {
        "start": 112,
        "end": 120
      }
    },
    {
      "markup": "\n\n",
      "interpretAs": "\n\n",
      "offset": {
        "start": 120,
        "end": 122
      }
    },
    {
      "text": "Testing ",
      "offset": {
        "start": 122,
        "end": 130
      }
    },
    {
      "markup": "``ticks `within` double ticks``",
      "interpretAs": "`#############################`",
      "offset": {
        "start": 130,
        "end": 161
      }
    },
    {
      "text": " inline.",
      "offset": {
        "start": 161,
        "end": 169
      }
    },
    {
      "markup": "\n\n",
      "interpretAs": "\n\n",
      "offset": {
        "start": 169,
        "end": 171
      }
    },
    {
      "text": "Testing ",
      "offset": {
        "start": 171,
        "end": 179
      }
    },
    {
      "markup": "`mispellled`",
      "interpretAs": "`##########`",
      "offset": {
        "start": 179,
        "end": 191
      }
    },
    {
      "text": " ticks.",
      "offset": {
        "start": 191,
        "end": 198
      }
    },
    {
      "markup": "\n\n## ",
      "interpretAs": "\n\n",
      "offset": {
        "start": 198,
        "end": 203
      }
    },
    {
      "text": "Code Blocks",
      "offset": {
        "start": 203,
        "end": 214
      }
    },
    {
      "markup": "\n\n```\nCode blocks\nshould continue to be\nignored.\n```\n\n```bash\nls -al\nrm -rf /dev/null\n```\n",
      "interpretAs": "\n\n\n\n\n\n\n\n\n\n\n\n",
      "offset": {
        "start": 214,
        "end": 304
      }
    }
  ]
}
